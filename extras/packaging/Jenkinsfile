pipeline {
    agent any
    triggers {
        gerrit customUrl: '',
            gerritProjects: [
                [branches: [[compareType: 'PLAIN', pattern: 'master']],
                 compareType: 'PLAIN',
                 disableStrictForbiddenFileVerification: false,
                 pattern: 'dhtnet']],
            triggerOnEvents: [
                commentAddedContains('!build'),
                patchsetCreated(excludeDrafts: true, excludeNoCodeChange: true)]
    }
    options {
        ansiColor('xterm')
    }
    parameters {
            string(name: 'GERRIT_REFSPEC',
                   defaultValue: 'refs/heads/dhtnet',
                   description: 'The Gerrit refspec to fetch.')
    }
    environment {
        PKG_NAME="dhtnet"
        PKG_VERSION=""
        FOLDER_NAME="$PKG_NAME-$PKG_VERSION"
    }
    stages {
        stage('SCM Checkout') {
            steps {
                checkout changelog: true, poll: false,
                    scm: [$class: 'GitSCM',
                        branches: [[name: 'FETCH_HEAD']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [
                            [$class: 'CloneOption', noTags: true, reference: '', shallow: true],
                            [$class: 'WipeWorkspace']],
                        submoduleCfg: [],
                        userRemoteConfigs: [[refspec: '${GERRIT_REFSPEC}', url: 'https://${JAMI_GERRIT_URL}/dhtnet']]]
            }
        }
        stage('Prepare build') {
            steps {
                script {
                    PKG_VERSION=sh(
                        script: "head -1 extras/packaging/build.version | grep -o '^[0-9\\.]\\+\$' -",
                        returnStdout: true
                    ).trim()
                    FOLDER_NAME="$PKG_NAME-$PKG_VERSION"
                }
                sh """
                    if [ -z "$PKG_VERSION" ]; then
                        echo "Empty value in build.version: $PKG_VERSION"
                        exit 1
                    fi

                    rm -Rf "dependencies/msgpack"
                    rm -Rf "dependencies/opendht"
                    rm -Rf "dependencies/pjproject"
                    rm -Rf "dependencies/restinio"
                    git submodule update --init --recursive
                """
                dir('extras/packaging') {
                    sh """
                        rm -Rf "$FOLDER_NAME"
                        rm -f -- *${FOLDER_NAME}.tar.gz
                        mkdir -p "$FOLDER_NAME"

                        # copy source code
                        cp -Rf ../../dependencies "$FOLDER_NAME/dependencies"
                        cp -Rf ../../include "$FOLDER_NAME/include"
                        cp -Rf ../../src "$FOLDER_NAME/src"
                        cp -Rf ../../tools "$FOLDER_NAME/tools"
                        cp -Rf ../../CMakeLists.txt "$FOLDER_NAME/CMakeLists.txt"
                        cp -Rf ../../COPYING "$FOLDER_NAME/COPYING"
                        cp -Rf ../../dhtnet.pc.in "$FOLDER_NAME/dhtnet.pc.in"
                        cp -Rf ../../README.md "$FOLDER_NAME/README.md"

                        # copy debian conf and create debian/ubuntu archive
                        cp -Rf "./gnu-linux/debian" "$FOLDER_NAME/debian"
                        tar -czf "deb-${FOLDER_NAME}.tar.gz" "$FOLDER_NAME"
                        rm -Rf "$FOLDER_NAME/debian"

                        # create fedora archive
                        tar -czf "rpm-${FOLDER_NAME}.tar.gz" "$FOLDER_NAME"
                    """
                }
            }
        }
        stage('Build distributions') {
            parallel {
                stage('Ubuntu 22.04') {
                    steps {
                        dir('extras/packaging') {
                            sh """
                                target="ubuntu-22"
                                mkdir -p "\$target"
                                docker build -t "dhtnet-builder:\$target" -f "gnu-linux/\$target.Dockerfile" --build-arg PKG_NAME="$FOLDER_NAME" .
                                docker run --rm \
                                    -v "\$(pwd)/\$target/":/build/artifacts \
                                    -e PKG_NAME="$FOLDER_NAME" "dhtnet-builder:\$target"
                            """
                        }
                    }
                }
                stage('Ubuntu 24.04') {
                    steps {
                        dir('extras/packaging') {
                            sh """
                                target="ubuntu-24"
                                mkdir -p "\$target"
                                docker build -t "dhtnet-builder:\$target" -f "gnu-linux/\$target.Dockerfile" --build-arg PKG_NAME="$FOLDER_NAME" .
                                docker run --rm \
                                    -v "\$(pwd)/\$target/":/build/artifacts \
                                    -e PKG_NAME="$FOLDER_NAME" "dhtnet-builder:\$target"
                            """
                        }
                    }
                }
                stage('Debian 12') {
                    steps {
                        dir('extras/packaging') {
                            sh """
                                target="debian-12"
                                mkdir -p "\$target"
                                docker build -t "dhtnet-builder:\$target" -f "gnu-linux/\$target.Dockerfile" --build-arg PKG_NAME="$FOLDER_NAME" .
                                docker run --rm \
                                    -v "\$(pwd)/\$target/":/build/artifacts \
                                    -e PKG_NAME="$FOLDER_NAME" "dhtnet-builder:\$target"
                            """
                        }
                    }
                }
                stage('Fedora 39') {
                    steps {
                        dir('extras/packaging') {
                            sh """
                                target="fedora-39"
                                mkdir -p "\$target"
                                docker build -t "dhtnet-builder:\$target" -f "gnu-linux/\$target.Dockerfile" --build-arg PKG_NAME="$FOLDER_NAME" .
                                docker run --rm \
                                    -v "\$(pwd)/\$target/":/build/artifacts \
                                    -e PKG_NAME="$FOLDER_NAME" "dhtnet-builder:\$target"
                            """
                        }
                    }
                }
                stage('Fedora 40') {
                    steps {
                        dir('extras/packaging') {
                            sh """
                                target="fedora-40"
                                mkdir -p "\$target"
                                docker build -t "dhtnet-builder:\$target" -f "gnu-linux/\$target.Dockerfile" --build-arg PKG_NAME="$FOLDER_NAME" .
                                docker run --rm \
                                    -v "\$(pwd)/\$target/":/build/artifacts \
                                    -e PKG_NAME="$FOLDER_NAME" "dhtnet-builder:\$target"
                            """
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            dir('extras/packaging') {
                archiveArtifacts artifacts: 'ubuntu-*/dhtnet_*.deb, debian-*/dhtnet_*.deb, fedora-*/dhtnet-*.rpm',
                                 caseSensitive: false,
                                 excludes: '**/*debug*'
            }
        }
    }
}
