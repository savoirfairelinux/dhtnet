{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3c9e8ddd_3be892ea",
        "filename": "src/security/certstore.cpp",
        "patchSetId": 1
      },
      "lineNbr": 596,
      "author": {
        "id": 6
      },
      "writtenOn": "2023-08-09T22:20:03Z",
      "side": 1,
      "message": "The TrustStore allows to set the status without having the certificate. But since we now want to check the status of the chain, this seems to makes sense.\nHowever, in that case, we must fail if the chain is not complete.",
      "range": {
        "startLine": 594,
        "startChar": 0,
        "endLine": 596,
        "endChar": 1
      },
      "revId": "770d1e67f5a82eed5cdd8c846c948651e93b64fb",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd295a52_c2aa08bc",
        "filename": "src/security/certstore.cpp",
        "patchSetId": 1
      },
      "lineNbr": 596,
      "author": {
        "id": 220
      },
      "writtenOn": "2023-09-01T17:58:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c9e8ddd_3be892ea",
      "range": {
        "startLine": 594,
        "startChar": 0,
        "endLine": 596,
        "endChar": 1
      },
      "revId": "770d1e67f5a82eed5cdd8c846c948651e93b64fb",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8c1f11a_c29285e8",
        "filename": "src/security/certstore.cpp",
        "patchSetId": 1
      },
      "lineNbr": 612,
      "author": {
        "id": 6
      },
      "writtenOn": "2023-08-09T22:20:03Z",
      "side": 1,
      "message": "* Could use the issuer field in cert and fallback to getCertificate.\n* We must fail if the parent is not found (maybe it\u0027s banned)",
      "range": {
        "startLine": 612,
        "startChar": 8,
        "endLine": 612,
        "endChar": 63
      },
      "revId": "770d1e67f5a82eed5cdd8c846c948651e93b64fb",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db3a69a1_a9fcfdb1",
        "filename": "src/security/certstore.cpp",
        "patchSetId": 1
      },
      "lineNbr": 612,
      "author": {
        "id": 6
      },
      "writtenOn": "2023-08-09T22:20:58Z",
      "side": 1,
      "message": "more specifically we should return PermissionStatus::UNDEFINED in that case",
      "parentUuid": "a8c1f11a_c29285e8",
      "range": {
        "startLine": 612,
        "startChar": 8,
        "endLine": 612,
        "endChar": 63
      },
      "revId": "770d1e67f5a82eed5cdd8c846c948651e93b64fb",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a2708a9_848043c5",
        "filename": "src/security/certstore.cpp",
        "patchSetId": 1
      },
      "lineNbr": 612,
      "author": {
        "id": 220
      },
      "writtenOn": "2023-08-10T17:37:26Z",
      "side": 1,
      "message": "will try to check tomorrow (else in september)\n\nAlso I uess if a new device is discovered but account is banned, we should return banned instead undefined i guess",
      "parentUuid": "db3a69a1_a9fcfdb1",
      "range": {
        "startLine": 612,
        "startChar": 8,
        "endLine": 612,
        "endChar": 63
      },
      "revId": "770d1e67f5a82eed5cdd8c846c948651e93b64fb",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3884da5_0b65753c",
        "filename": "src/security/certstore.cpp",
        "patchSetId": 1
      },
      "lineNbr": 612,
      "author": {
        "id": 220
      },
      "writtenOn": "2023-09-01T17:58:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a2708a9_848043c5",
      "range": {
        "startLine": 612,
        "startChar": 8,
        "endLine": 612,
        "endChar": 63
      },
      "revId": "770d1e67f5a82eed5cdd8c846c948651e93b64fb",
      "serverId": "1e26b4c1-6b8c-47ff-9df7-501b633d3b5a"
    }
  ]
}